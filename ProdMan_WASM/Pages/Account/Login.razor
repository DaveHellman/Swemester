@page "/login"
@using ProdMan_WASM.Services
@inject IAuthService authService
@inject NavigationManager navman
@inject AuthenticationStateProvider authProvider

<EditForm Model="LoginReq" OnValidSubmit="LoginUser">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="card">
        <div class="card-body">
            @if(ShowError)
            {
                <span class="text-danger">@ErrorMessage</span>
            }
            <label class="form-label">Username:</label>
            <InputText @bind-Value="LoginReq.Username" class="form-control" type="text" /><br />

                <label class="form-label">Password:</label>
            <InputText @bind-Value="LoginReq.Password" class="form-control" type="password" />
        
        </div>
        <div class="card-footer">
            <button class="btn btn-secondary">Register</button>
            <button class="btn btn-primary"><i class="fa fa-sign-in"></i><span>Login</span></button>
        </div>
    </div>
</EditForm>


@code {
    public AuthenticationRequestDTO LoginReq { get; set; } = new();
    public bool ShowError { get; set; }
    public string ErrorMessage { get; set; }

    public async Task LoginUser()
    {
        var response = await authService.Login(LoginReq);
        if (response.IsAuthenticationSuccess)
        {
            ShowError = false;
            ((AuthStateProvider)authProvider).NotifyUserLogin(response.Token);
            navman.NavigateTo("/");
        }
        else
        {
            ShowError = true;
            ErrorMessage = response.ErrorMessage;
        }
    }
}
